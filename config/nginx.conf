worker_processes 1;

user nobody nogroup;
pid /run/nginx.pid;
error_log /var/log/nginx/error.log;

events {
    worker_connections 1024;
    accept_mutex off;
}

http {
    log_format api '$remote_addr - $remote_user [$time_local] "$request" $status $bytes_sent $http_x_forwarded_for $host $request_time $upstream_response_time $pipe : "$http_user_agent" $server_port';
    access_log /var/log/nginx/access.log api;

    default_type application/octet-stream;
    gzip on;
    gzip_disable "msie6";
    include /etc/nginx/mime.types;
    keepalive_timeout 65;
    sendfile on;
    tcp_nodelay on;
    tcp_nopush on;
    types_hash_max_size 2048;

    upstream backend {
        server 127.0.0.1:8000 fail_timeout=0;
    }

    upstream frontend {
        server 127.0.0.1:3000 fail_timeout=0;
    }

    proxy_cache_path /tmp/nginx levels=1:2 keys_zone=local_zone:128m inactive=1024m;
    proxy_cache_key "$scheme$request_method$host$request_uri";


    server {
        listen 80 default;
        client_max_body_size 4G;
        server_name _;

        keepalive_timeout 5;

        location ~* ^/protected/(.*) {
          internal;
          alias /
        }

        location /api {
            proxy_cache local_zone;
            add_header X-Proxy-Cache $upstream_cache_status;

            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;

            if (!-f $request_filename) {
                proxy_pass http://backend;
                break;
            }
        }

        location / {
            proxy_cache local_zone;
            add_header X-Proxy-Cache $upstream_cache_status;

            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header Host $http_host;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_redirect off;

            if (!-f $request_filename) {
                proxy_pass http://frontend;
                break;
            }
        }

        error_page 500 502 503 504 /500.html;
        location = /500.html {
            root /var/glass/static;
        }
    }

    include /etc/nginx/sites-enabled/*.conf;
}
